#!/bin/bash

# API ÌÇ§ ÌôòÍ≤ΩÎ≥ÄÏàò ÏÑ§Ï†ï Î∞è ÏÑúÎπÑÏä§ ÏãúÏûë Ïä§ÌÅ¨Î¶ΩÌä∏

echo "üîê Setting up environment variables..."

# .env ÌååÏùºÏóêÏÑú ÌôòÍ≤ΩÎ≥ÄÏàò Î°úÎìú
export $(grep -v '^#' .env | xargs)

# ÌôòÍ≤ΩÎ≥ÄÏàò ÌôïÏù∏
echo "‚úÖ Environment variables loaded:"
echo "   DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY:0:10}..."
echo "   GEMINI_API_KEY: ${GEMINI_API_KEY:0:10}..."

# ÏÑúÎπÑÏä§ ÏãúÏûë
echo ""
echo "üöÄ Starting services with proper environment..."

# AI Collaboration Orchestrator ÏãúÏûë
echo "Starting AI Collaboration Orchestrator..."
nohup node ai-collaboration-orchestrator.js > orchestrator.log 2>&1 &
ORCHESTRATOR_PID=$!
echo "   PID: $ORCHESTRATOR_PID"

# API Usage Monitor ÏãúÏûë
echo "Starting API Usage Monitor..."
nohup node api-usage-monitor-simplified.js > monitor.log 2>&1 &
MONITOR_PID=$!
echo "   PID: $MONITOR_PID"

# Ontology Optimizer ÏãúÏûë
echo "Starting Ontology Optimizer..."
nohup node ontology-optimizer.js > optimizer.log 2>&1 &
OPTIMIZER_PID=$!
echo "   PID: $OPTIMIZER_PID"

# PID Ï†ÄÏû•
echo "$ORCHESTRATOR_PID" > orchestrator.pid
echo "$MONITOR_PID" > monitor.pid
echo "$OPTIMIZER_PID" > optimizer.pid

echo ""
echo "‚úÖ All services started with proper API keys"
echo "üìù Log files:"
echo "   - orchestrator.log"
echo "   - monitor.log"
echo "   - optimizer.log"
echo ""
echo "To stop services: kill \$(cat *.pid)"